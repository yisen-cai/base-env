version: '3.9'

services:
  mysql:
    restart: always
    image: mysql:8.0.29
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/:/var/lib/mysql
    networks:
      - env-network
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
      - MYSQL_USER=yisen-cai
      - MYSQL_DATABASE=base-env

  mysql-admin:
    restart: always
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin 
    ports:
      - "8001:80"
    mem_limit: 512m
    depends_on:
      - mysql
    networks:
      - env-network
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root

  redis:
    restart: always
    image: redis:7.0.2
    container_name: redis
    command: /bin/bash -c 'redis-server --appendonly yes'
    sysctls:
      - net.core.somaxconn=65535
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    mem_limit: 96m
    networks:
      - env-network

  postgres:
    image: postgres:14.3-1
    restart: always
    container_name: postgres
    ports:
      - '5432:5432'
    volumes: 
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - env-network

  mongo:
    image: mongo:5.0.9
    restart: always
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ~/mongo:/data/db
    networks:
      - env-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
       - MONGO_INITDB_ROOT_PASSWORD=mongo
  

  # zookeeper cluster
  zoo1:
    image: zookeeper:3.6.3
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2181:2181
    networks:
      - env-network
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper:3.6.3
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
      - 2182:2181
    networks:
      - env-network
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper:3.6.3
    restart: always
    container_name: zoo3
    hostname: zoo3
    ports:
      - 2183:2181
    networks:
      - env-network
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoonavigator:
    container_name: zoonavigator
    image: elkozmon/zoonavigator
    ports:
      - 9000:9000
    networks:
      - env-network
    depends_on:
      - zoo1
      - zoo2
      - zoo3


  # kafka cluster
  kafka1:
    image: 'bitnami/kafka:3.2'
    ports:
      - '9091:9092'
    container_name: kafka1
    volumes:
      - ./kafka1/:/bitnami/kafka1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - env-network
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # - KAFKA_ZOOKEEPER_USER=kafka
      # - KAFKA_ZOOKEEPER_PASSWORD=kafka_password
      # - KAFKA_CLIENT_USERS=user
      # - KAFKA_CLIENT_PASSWORDS=password
      # - KAFKA_CERTIFICATE_PASSWORD=certificatePassword123
      # - KAFKA_TLS_TYPE=JKS # or PEM

  kafka2:
    image: 'bitnami/kafka:3.2'
    ports:
      - '9092:9092'
    container_name: kafka2
    volumes:
      - ./kafka/:/bitnami/kafka2
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - env-network
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
  
  kafka3:
    image: 'bitnami/kafka:3.2'
    ports:
      - '9093:9092'
    container_name: kafka3
    volumes:
      - ./kafka/:/bitnami/kafka3
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - env-network
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
  
 

volumes:
  mysql:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
  mongo:
    driver: local
  kafka:
    driver: local

networks:
  env-network:
    driver: bridge